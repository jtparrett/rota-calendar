{"version":3,"sources":["reducers/index.ts","reducers/bookings.ts","store.ts","atoms/Container/index.tsx","context/calendar.tsx","atoms/Typography/index.tsx","atoms/IconButton/index.tsx","atoms/Button/index.tsx","molecules/CalendarNav/index.tsx","molecules/Header/index.tsx","atoms/AddButton/index.tsx","atoms/HoursList/index.tsx","config.ts","atoms/Slot/index.tsx","molecules/CalendarSlot/view.tsx","molecules/CalendarSlot/index.tsx","atoms/Day/index.tsx","atoms/Modal/index.tsx","molecules/CalendarDays/view.tsx","molecules/CalendarDays/index.tsx","actions/bookings.ts","molecules/CalendarHours/index.tsx","organisms/Calendar/index.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["combineReducers","bookings","state","arguments","length","undefined","action","type","Object","objectSpread","defineProperty","bookingId","createStore","reducers","styled","div","_templateObject","CalendarContext","React","createContext","CalendarProvider","_ref","children","_useState","useState","_useState2","slicedToArray","dayOffset","setDayOffset","_useState3","_useState4","hourOffset","setHourOffset","value","incrementHourOffset","Math","min","incrementFactory","decrementHourOffset","max","decrementFactory","react_default","a","createElement","Provider","withCalendar","Component","props","Consumer","calendarProps","assign","Typography","Element","objectWithoutProperties","defaultProps","Typography_templateObject","margin","fontSize","concat","color","Button","button","IconButton_templateObject","IconButton","icon","size","IconButton_Button","material_icons_react_default","Main","Button_templateObject","title","atoms_Typography","CalendarNav_templateObject","Actions","_templateObject2","CalendarNav_Main","atoms_IconButton","onClick","atoms_Button","Header_templateObject","Header","Header_Main","CalendarNav","AddButton_templateObject","AddButton","AddButton_Button","date","renderItem","hours","getHours","toConsumableArray","Array","map","_","index","startOf","add","setHours","useEffect","useHours","Slot_templateObject","Slot","Slot_Main","CalendarSlot","actions","isBooked","getBookingByDate","createSelector","format","connect","store","View","propTypes","PropTypes","any","isRequired","Day_templateObject","Day_templateObject2","Day","addBooking","Day_Main","Day_Header","atoms_HoursList","slotDate","molecules_CalendarSlot","key","Modal_templateObject","Content","Modal_templateObject2","modalRoot","document","getElementById","Modal","ReactDOM","createPortal","Modal_Main","today","dayjs","CalendarDays","createBooking","days","getDays","setDays","useDays","modalOpen","setModalOpen","_useState5","_useState6","selectedDate","setSelectedDate","Fragment","atoms_Day","atoms_Modal","dispatch","createBookingAction","compose","CalendarHours_templateObject","CalendarHours_Button","Calendar_templateObject","Calendar","calendar_CalendarProvider","Calendar_Main","molecules_CalendarHours","molecules_CalendarDays","Boolean","window","location","hostname","match","render","es","Container","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f280d43a.chunk.js","sourcesContent":["import {combineReducers} from 'redux'\n\n// Reducers\nimport bookings from './bookings'\n\nexport default combineReducers({\n  bookings\n})","///////////////////\n// Bookings Reducer\n///////////////////\n\n// Action Interface\ninterface ActionProps {\n  type: string,\n  bookingId: string\n}\n\n// Reducer\nexport default (state = {}, action: ActionProps) => {\n  switch(action.type){\n    case 'CREATE_BOOKING':\n      return {\n        ...state,\n        [action.bookingId]: true\n      }\n    break\n    default:\n      return state\n  }\n}","import {createStore} from 'redux'\n\nimport reducers from './reducers'\n\nexport default createStore(reducers)","import styled from 'styled-components'\n\n// Styles\nexport default styled.div`\n  width: 980px;\n  max-width: 100%;\n  margin: 80px auto;\n  box-sizing: border-box;\n  padding: 0 20px;\n`","import React,{ useState } from 'react'\nimport PropTypes from 'prop-types'\n\n// Config\nimport {hoursToShow} from '../config'\n\n// Context\nconst CalendarContext = React.createContext({})\n\n// Methods\nconst incrementFactory = (hourOffset: number, setHourOffset) => () => {\n  setHourOffset(Math.min(hourOffset + 1, 24 - hoursToShow))\n}\n\nconst decrementFactory = (hourOffset: number, setHourOffset) => () => {\n  setHourOffset(Math.max(hourOffset - 1, 0))\n}\n\n// Provider\nexport const CalendarProvider = ({children}) => {\n  const [dayOffset, setDayOffset] = useState(0)\n  const [hourOffset, setHourOffset] = useState(0)\n\n  const incrementHourOffset = incrementFactory(hourOffset, setHourOffset)\n  const decrementHourOffset = decrementFactory(hourOffset, setHourOffset)\n\n  const value: object = {\n    dayOffset,\n    setDayOffset,\n    hourOffset,\n    incrementHourOffset,\n    decrementHourOffset\n  }\n\n  return (\n    <CalendarContext.Provider value={value}>\n      {children}\n    </CalendarContext.Provider>\n  )\n}\n\n// Consumer HOC\nexport const withCalendar = (Component) => {\n  return (props) => (\n    <CalendarContext.Consumer>\n      {(calendarProps: object) => (\n        <Component {...calendarProps} {...props} />\n      )}\n    </CalendarContext.Consumer>\n  )\n}\n\nwithCalendar.propTypes = {\n  Component: PropTypes.element.isRequired\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// Render\nconst Typography = ({ Element, children, ...props }) => (\n  <Element {...props}>{children}</Element>\n)\n\nTypography.defaultProps = {\n  Element: 'p'\n}\n\nTypography.propTypes = {\n  Element: PropTypes.string,\n  margin: PropTypes.string,\n  fontSize: PropTypes.string,\n  color: PropTypes.string\n}\n\n// Styles\nexport default styled(Typography)`\n  line-height: 1;\n  margin: ${props => props.margin || '0'};\n  ${props => props.fontSize && `font-size: ${props.fontSize};`}\n  ${props => props.color && `color: ${props.color};`}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport MaterialIcon from 'material-icons-react'\nimport PropTypes from 'prop-types'\n\n// Styles\nconst Button = styled.button`\n  outline: none;\n  display: flex;\n  width: 100%;\n  border: none;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  background-color: #000;\n  cursor: pointer;\n  margin: 0;\n`\n\n// Render\nconst IconButton = ({ icon, size, ...props }) => (\n  <Button {...props}>\n    <MaterialIcon icon={icon} size={size} color=\"#fff\" />\n  </Button>\n)\n\nIconButton.defaultProps = {\n  size: 25\n}\n\nIconButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  size: PropTypes.number\n}\n\nexport default IconButton","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// Atoms\nimport Typography from '../../atoms/Typography'\n\n// Styles\nconst Main = styled.button`\n  border: none;\n  outline: none;\n  background-color: #000;\n  color: #fff;\n  padding: 5px 10px;\n  cursor: pointer;\n  display: block;\n  margin: 0;\n`\n\n// Render\nconst Button = ({title, ...props}) => (\n  <Main {...props}>\n    <Typography color=\"inherit\" fontSize=\"12px\">{title}</Typography>\n  </Main>\n)\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default Button","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// Config\nimport {hoursToShow} from '../../config'\n\n// Context\nimport {withCalendar} from '../../context/calendar'\n\n// Atoms\nimport IconButton from '../../atoms/IconButton'\nimport Button from '../../atoms/Button'\n\n// Styles\nconst Main = styled.div`\n  margin-left: auto;\n`\n\nconst Actions = styled.div`\n  display: flex;\n  overflow: hidden;\n  border-radius: 3px;\n`\n\n// Render\nconst Nav = ({ dayOffset, setDayOffset }) => (\n  <Main>\n    <Actions>\n      <IconButton \n        onClick={() => setDayOffset(dayOffset - 1)} \n        icon=\"keyboard_arrow_left\" \n        size={15} />\n\n      <Button onClick={() => setDayOffset(0)} title=\"Today\" />\n\n      <IconButton \n        onClick={() => setDayOffset(dayOffset + 1)} \n        icon=\"keyboard_arrow_right\" \n        size={15} />\n    </Actions>\n  </Main>\n)\n\nNav.propTypes = {\n  dayOffset: PropTypes.number.isRequired,\n  setDayOffset: PropTypes.func.isRequired\n}\n\nexport default withCalendar(Nav)","import React from 'react'\nimport styled from 'styled-components'\n\n// Atoms\nimport Typography from '../../atoms/Typography'\n\n// Molecules\nimport CalendarNav from '../../molecules/CalendarNav'\n\n// Styles\nconst Main = styled.div`\n  display: flex;\n  padding-bottom: 20px;\n  align-items: flex-end;\n`\n\n// Render\nexport default () => (\n  <Main>\n    <Typography Element=\"h1\">Rota Calendar</Typography>\n    <CalendarNav />\n  </Main>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport MaterialIcon from 'material-icons-react'\n\n// Styles\nconst Button = styled.button`\n  border: none;\n  background: transparent;\n  outline: none;\n  color: #aaa;\n  cursor: pointer;\n  padding: 0 10px;\n\n  &:hover {\n    color: #000;\n  }\n`\n\n// Render\nexport default (props) => (\n  <Button {...props}>\n    <MaterialIcon icon=\"add\" color=\"inherit\" />\n  </Button>\n)","import React, { useState, useEffect } from 'react'\nimport dayjs from 'dayjs'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// Config\nimport {hoursToShow} from '../../config'\n\n// Context\nimport {withCalendar} from '../../context/calendar'\n\n// Hooks\nconst useHours = (date: any, hourOffset: number) => {\n  const getHours = () => {\n    return [...Array(hoursToShow)].map((_, index) => {\n      return date\n        .startOf('day')\n        .add(index + hourOffset, 'hour')\n    })\n  }\n\n  const [hours, setHours] = useState(getHours)\n\n  useEffect(() => {\n    setHours(getHours)\n  }, [hourOffset])\n\n  return hours\n}\n\n// Render\nconst HoursList = ({ date, hourOffset, renderItem }) => {\n  const hours: any[] = useHours(date, hourOffset)\n\n  return (\n    <div>\n      {hours.map((date) => {\n        return renderItem(date)\n      })}\n    </div>\n  )\n}\n\nHoursList.propTypes = {\n  date: PropTypes.any.isRequired,\n  hourOffset: PropTypes.number.isRequired,\n  renderItem: PropTypes.func.isRequired\n}\n\nexport default withCalendar(HoursList)","///////////////////\n// CONFIG\n///////////////////\n\n// Number of hours shown per day\nexport const hoursToShow = 12\n\n// Number of days shown per calendar screen\nexport const daysToShow = 7\n\n// Height of calendar header\nexport const headerHeight = '40px'\n\n// Height of calendar slot\n// Fixed value due to not using table for calendar layout :(\nexport const slotHeight = '40px'","import React from 'react'\nimport styled from 'styled-components'\n\n// Config\nimport {slotHeight} from '../../config'\n\n// Styles\nconst Main = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n  height: ${slotHeight};\n  box-sizing: border-box;\n`\n\n// Render\nexport default ({ children }) => (\n  <Main>\n    {children}\n  </Main>\n)","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Atoms\nimport Slot from '../../atoms/Slot'\nimport Typography from '../../atoms/Typography'\n\n// Render\nconst CalendarSlot = ({ actions, isBooked }) => (\n  <Slot>\n    {isBooked ? (\n      <Typography>Booked</Typography>\n    ) : actions}\n  </Slot>\n)\n\nCalendarSlot.propTypes = {\n  actions: PropTypes.element.isRequired,\n  isBooked: PropTypes.bool\n}\n\nexport default CalendarSlot","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createSelector} from 'reselect'\n\n// View\nimport View from './view'\n\n// Map redux state to props\nconst getBookings = (state) => state.bookings\n\nconst getDate = (_, props) => props.date\n\nconst getBookingByDate = createSelector(\n  getBookings, \n  getDate,\n  (bookings, date) => {\n    return bookings[date.format()]\n  }\n)\n\nconst mapStateToProps = (store, props) => ({\n  isBooked: getBookingByDate(store, props)\n})\n\nconst CalendarSlot = connect(mapStateToProps)(View)\n\nCalendarSlot.propTypes = {\n  date: PropTypes.any.isRequired\n}\n\nexport default CalendarSlot","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\n\n// Atoms\nimport AddButton from '../../atoms/AddButton'\nimport Typography from '../../atoms/Typography'\nimport HoursList from '../../atoms/HoursList'\n\n// Molecules\nimport CalendarSlot from '../../molecules/CalendarSlot'\n\n// Config\nimport {headerHeight} from '../../config'\n\n// Styles\nconst Main = styled.div`\n  flex: 1;\n  border-bottom: ${headerHeight} solid #000;\n`\n\nconst Header = styled.div`\n  height: ${headerHeight};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000;\n  color: #fff;\n  padding: 0 5px;\n  box-sizing: border-box;\n`\n\n// Render\nconst Day = ({ date, addBooking }) => (\n  <Main>\n    <Header>\n      <Typography fontSize=\"14px\">{date.format('DD/MM/YYYY')}</Typography>\n    </Header>\n\n    <HoursList \n      date={date}\n      renderItem={(slotDate) => (\n        <CalendarSlot \n          key={slotDate.format('HH:mm')}\n          date={slotDate}\n          actions={\n            <AddButton onClick={() => {\n              addBooking(slotDate)\n            }} />  \n          } />\n      )} />\n  </Main>\n)\n\nDay.propTypes = {\n  date: PropTypes.any,\n  addBooking: PropTypes.func.isRequired\n}\n\nexport default Day","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n// Styles\nconst Main = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 5;\n`\n\nconst Content = styled.div`\n  width: 500px;\n  max-width: 100%;\n  margin: 50px auto;\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 3px;\n`\n\n// Render\nconst modalRoot = document.getElementById('modal-root')\n\nconst Modal = ({children}) => {\n  if(!modalRoot){\n    return null\n  }\n\n  const Component = () => (\n    <Main>\n      <Content>\n        {children}\n      </Content>\n    </Main>\n  )\n\n  return ReactDOM.createPortal(<Component />, modalRoot)\n}\n\nModal.propTypes = {\n  children: PropTypes.any\n}\n\nexport default Modal","import React, { useState, useEffect } from 'react'\nimport dayjs from 'dayjs'\nimport PropTypes from 'prop-types'\n\n// Atoms\nimport Day from '../../atoms/Day'\nimport Modal from '../../atoms/Modal'\nimport Button from '../../atoms/Button'\nimport Typography from '../../atoms/Typography'\n\n// Config\nimport {daysToShow} from '../../config'\n\n// Hooks\nconst today = dayjs().startOf('day')\n\nconst useDays = (dayOffset: number) => {\n  const getDays = () => {\n    return [...Array(daysToShow)].map((_, index) => {\n      return today.add(index + dayOffset, 'day')\n    })\n  }\n\n  const [days, setDays] = useState(getDays)\n\n  useEffect(() => {\n    setDays(getDays)\n  }, [dayOffset])\n\n  return days\n}\n\n// Render\nconst CalendarDays = ({ dayOffset, createBooking }) => {\n  const days: any[] = useDays(dayOffset)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [selectedDate, setSelectedDate] = useState(today)\n\n  return (\n    <React.Fragment>\n      {days.map(date => (\n        <Day \n          key={date.format('DD/MM/YYYY')} \n          date={date}\n          addBooking={(slotDate) => {\n            setSelectedDate(slotDate)\n            setModalOpen(true)\n          }} />\n      ))}\n\n      {modalOpen &&\n        <Modal>\n          <Button title=\"Close\" onClick={() => setModalOpen(false)} />\n          <Typography margin=\"10px 0\">{selectedDate.format('MMMM D : HH:mm')}</Typography>\n          <Button \n            title=\"Book this slot\" \n            onClick={() => {\n              createBooking(selectedDate)\n              setModalOpen(false)\n            }} />\n        </Modal>\n      }\n    </React.Fragment>\n  )\n}\n\nCalendarDays.propTypes = {\n  dayOffset: PropTypes.number.isRequired,\n  createBooking: PropTypes.func.isRequired\n}\n\nexport default CalendarDays","import {connect} from 'react-redux'\nimport {compose} from 'recompose'\n\n// Actions\nimport {createBooking as createBookingAction} from '../../actions/bookings'\n\n// Context\nimport {withCalendar} from '../../context/calendar'\n\n// View\nimport View from './view'\n\n// Map Redux dispatch to props\nconst createBooking = (dispatch) => (date) => {\n  const bookingId = date.format()\n  dispatch(createBookingAction(bookingId))\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  createBooking: createBooking(dispatch)\n})\n\n// Container\nconst CalendarDays = compose(\n  withCalendar,\n  connect(null, mapDispatchToProps)\n)(View)\n\nexport default CalendarDays","export const createBooking = (bookingId: string) => {\n  return {\n    type: 'CREATE_BOOKING',\n    bookingId\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport MaterialIcon from 'material-icons-react'\nimport dayjs from 'dayjs'\n\n// Context\nimport {withCalendar} from '../../context/calendar'\n\n// Atoms\nimport Typography from '../../atoms/Typography'\nimport HoursList from '../../atoms/HoursList'\nimport Slot from '../../atoms/Slot'\nimport IconButton from '../../atoms/IconButton'\n\n// Config\nimport {headerHeight} from '../../config'\n\n// Styles\nconst Button = styled(IconButton)`\n  height: ${headerHeight};\n`\n\n// Render\nconst today = dayjs()\n\nconst CalendarHours = ({ hourOffset, incrementHourOffset, decrementHourOffset }) => (\n  <div>\n    <Button \n      onClick={decrementHourOffset} \n      icon=\"keyboard_arrow_up\" \n      size={20} />\n\n    <HoursList \n      date={today}\n      renderItem={(date) => (\n        <Slot key={date.format('HH:mm')}>\n          <Typography>{date.format('HH:mm')}</Typography>\n        </Slot>\n      )} />\n\n    <Button \n      onClick={incrementHourOffset} \n      icon=\"keyboard_arrow_down\" \n      size={20} />\n  </div>\n)\n\nCalendarHours.propTypes = {\n  hourOffset: PropTypes.number.isRequired,\n  incrementHourOffset: PropTypes.func.isRequired,\n  decrementHourOffset: PropTypes.func.isRequired\n}\n\nexport default withCalendar(CalendarHours)","import React from 'react'\nimport styled from 'styled-components'\n\n// Context\nimport {CalendarProvider} from '../../context/calendar'\n\n// Molecules\nimport Header from '../../molecules/Header'\nimport CalendarDays from '../../molecules/CalendarDays'\nimport CalendarHours from '../../molecules/CalendarHours'\n\n// Styles\nconst Main = styled.div`\n  display: flex;\n`\n\n// Render\nexport default () => (\n  <CalendarProvider>\n    <Header />\n    <Main>\n      <CalendarHours />\n      <CalendarDays />\n    </Main>\n  </CalendarProvider>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport {Provider} from 'react-redux'\n\n// Store\nimport store from './store'\n\n// Atoms\nimport Container from './atoms/Container'\n\n// Organisms\nimport Calendar from './organisms/Calendar'\n\n// Render\nexport default () => (\n  <Provider store={store}>\n    <Container>\n      <Calendar />\n    </Container>\n  </Provider>\n)"],"sourceRoot":""}