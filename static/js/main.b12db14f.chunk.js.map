{"version":3,"sources":["reducers/index.ts","store.ts","atoms/Container/index.tsx","context/calendar.tsx","atoms/Typography/index.tsx","atoms/IconButton/index.tsx","atoms/Button/index.tsx","molecules/CalendarNav/index.tsx","molecules/Header/index.tsx","atoms/AddButton/index.tsx","atoms/HoursList/index.tsx","config.ts","atoms/Slot/index.tsx","atoms/Day/index.tsx","atoms/Modal/index.tsx","molecules/CalendarDays/index.tsx","molecules/CalendarHours/index.tsx","organisms/Calendar/index.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["combineReducers","createStore","reducers","styled","div","_templateObject","CalendarContext","React","createContext","CalendarProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","dayOffset","setDayOffset","_useState3","_useState4","hourOffset","setHourOffset","value","incrementHourOffset","Math","min","incrementFactory","decrementHourOffset","max","decrementFactory","react_default","a","createElement","Provider","withCalendar","Component","props","Consumer","calendarProps","assign","Typography","Element","objectWithoutProperties","defaultProps","Typography_templateObject","margin","fontSize","concat","color","Button","button","IconButton_templateObject","IconButton","icon","size","IconButton_Button","material_icons_react_default","Main","Button_templateObject","title","atoms_Typography","CalendarNav_templateObject","Actions","_templateObject2","CalendarNav_Main","atoms_IconButton","onClick","atoms_Button","Header_templateObject","Header","Header_Main","CalendarNav","AddButton_templateObject","AddButton","AddButton_Button","date","renderItem","hours","getHours","toConsumableArray","Array","map","_","index","startOf","add","setHours","useEffect","useHours","Slot_templateObject","Slot","Slot_Main","Day_templateObject","Day_templateObject2","Day","addBooking","Day_Main","Day_Header","format","atoms_HoursList","slotDate","key","Modal_templateObject","Content","Modal_templateObject2","modalRoot","document","getElementById","Modal","ReactDOM","createPortal","Modal_Main","today","dayjs","days","getDays","setDays","useDays","modalOpen","setModalOpen","_useState5","_useState6","selectedDate","setSelectedDate","Fragment","atoms_Day","atoms_Modal","CalendarHours_templateObject","CalendarHours_Button","Calendar_templateObject","Calendar","calendar_CalendarProvider","Calendar_Main","molecules_CalendarHours","molecules_CalendarDays","Boolean","window","location","hostname","match","render","es","store","Container","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b12db14f.chunk.js","sourcesContent":["import {combineReducers} from 'redux'\n\nexport default combineReducers({\n  \n})","import {createStore} from 'redux'\n\nimport reducers from './reducers'\n\nexport default createStore(reducers)","import styled from 'styled-components'\n\n// Styles\nexport default styled.div`\n  width: 980px;\n  max-width: 100%;\n  margin: 80px auto;\n  box-sizing: border-box;\n  padding: 0 20px;\n`","import React,{ useState } from 'react'\nimport PropTypes from 'prop-types'\n\n// Config\nimport {hoursToShow} from '../config'\n\n// Context\nconst CalendarContext = React.createContext({})\n\n// Methods\nconst incrementFactory = (hourOffset: number, setHourOffset) => () => {\n  setHourOffset(Math.min(hourOffset + 1, 24 - hoursToShow))\n}\n\nconst decrementFactory = (hourOffset: number, setHourOffset) => () => {\n  setHourOffset(Math.max(hourOffset - 1, 0))\n}\n\n// Provider\nexport const CalendarProvider = ({children}) => {\n  const [dayOffset, setDayOffset] = useState(0)\n  const [hourOffset, setHourOffset] = useState(0)\n\n  const incrementHourOffset = incrementFactory(hourOffset, setHourOffset)\n  const decrementHourOffset = decrementFactory(hourOffset, setHourOffset)\n\n  const value: object = {\n    dayOffset,\n    setDayOffset,\n    hourOffset,\n    incrementHourOffset,\n    decrementHourOffset\n  }\n\n  return (\n    <CalendarContext.Provider value={value}>\n      {children}\n    </CalendarContext.Provider>\n  )\n}\n\n// Consumer HOC\nexport const withCalendar = (Component) => {\n  return (props) => (\n    <CalendarContext.Consumer>\n      {(calendarProps: object) => (\n        <Component {...calendarProps} {...props} />\n      )}\n    </CalendarContext.Consumer>\n  )\n}\n\nwithCalendar.propTypes = {\n  Component: PropTypes.element.isRequired\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// Render\nconst Typography = ({ Element, children, ...props }) => (\n  <Element {...props}>{children}</Element>\n)\n\nTypography.defaultProps = {\n  Element: 'p'\n}\n\nTypography.propTypes = {\n  Element: PropTypes.string,\n  margin: PropTypes.string,\n  fontSize: PropTypes.string,\n  color: PropTypes.string\n}\n\n// Styles\nexport default styled(Typography)`\n  line-height: 1;\n  margin: ${props => props.margin || '0'};\n  ${props => props.fontSize && `font-size: ${props.fontSize};`}\n  ${props => props.color && `color: ${props.color};`}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport MaterialIcon from 'material-icons-react'\nimport PropTypes from 'prop-types'\n\n// Styles\nconst Button = styled.button`\n  outline: none;\n  display: flex;\n  width: 100%;\n  border: none;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  background-color: #000;\n  cursor: pointer;\n`\n\n// Render\nconst IconButton = ({ icon, size, ...props }) => (\n  <Button {...props}>\n    <MaterialIcon icon={icon} size={size} color=\"#fff\" />\n  </Button>\n)\n\nIconButton.defaultProps = {\n  size: 25\n}\n\nIconButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  size: PropTypes.number\n}\n\nexport default IconButton","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// Atoms\nimport Typography from '../../atoms/Typography'\n\n// Styles\nconst Main = styled.button`\n  border: none;\n  outline: none;\n  background-color: #000;\n  color: #fff;\n  padding: 5px 10px;\n  cursor: pointer;\n  display: block;\n`\n\n// Render\nconst Button = ({title, ...props}) => (\n  <Main {...props}>\n    <Typography color=\"inherit\" fontSize=\"12px\">{title}</Typography>\n  </Main>\n)\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default Button","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// Config\nimport {hoursToShow} from '../../config'\n\n// Context\nimport {withCalendar} from '../../context/calendar'\n\n// Atoms\nimport IconButton from '../../atoms/IconButton'\nimport Button from '../../atoms/Button'\n\n// Styles\nconst Main = styled.div`\n  margin-left: auto;\n`\n\nconst Actions = styled.div`\n  display: flex;\n  overflow: hidden;\n  border-radius: 3px;\n`\n\n// Render\nconst Nav = ({ dayOffset, setDayOffset }) => (\n  <Main>\n    <Actions>\n      <IconButton \n        onClick={() => setDayOffset(dayOffset - 1)} \n        icon=\"keyboard_arrow_left\" \n        size={15} />\n\n      <Button onClick={() => setDayOffset(0)} title=\"Today\" />\n\n      <IconButton \n        onClick={() => setDayOffset(dayOffset + 1)} \n        icon=\"keyboard_arrow_right\" \n        size={15} />\n    </Actions>\n  </Main>\n)\n\nNav.propTypes = {\n  dayOffset: PropTypes.number.isRequired,\n  setDayOffset: PropTypes.func.isRequired\n}\n\nexport default withCalendar(Nav)","import React from 'react'\nimport styled from 'styled-components'\n\n// Atoms\nimport Typography from '../../atoms/Typography'\n\n// Molecules\nimport CalendarNav from '../../molecules/CalendarNav'\n\n// Styles\nconst Main = styled.div`\n  display: flex;\n  padding-bottom: 20px;\n  align-items: flex-end;\n`\n\n// Render\nexport default () => (\n  <Main>\n    <Typography Element=\"h1\">Rota Calendar</Typography>\n    <CalendarNav />\n  </Main>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport MaterialIcon from 'material-icons-react'\n\n// Styles\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: transparent;\n  width: 100%;\n  height: 100%;\n  outline: none;\n  color: #aaa;\n  cursor: pointer;\n\n  &:hover {\n    color: #000;\n  }\n`\n\n// Render\nexport default (props) => (\n  <Button {...props}>\n    <MaterialIcon icon=\"add\" color=\"inherit\" />\n  </Button>\n)","import React, { useState, useEffect } from 'react'\nimport dayjs from 'dayjs'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// Config\nimport {hoursToShow} from '../../config'\n\n// Context\nimport {withCalendar} from '../../context/calendar'\n\n// Hooks\nconst useHours = (date: any, hourOffset: number) => {\n  const getHours = () => {\n    return [...Array(hoursToShow)].map((_, index) => {\n      return date\n        .startOf('day')\n        .add(index + hourOffset, 'hour')\n    })\n  }\n\n  const [hours, setHours] = useState(getHours)\n\n  useEffect(() => {\n    setHours(getHours)\n  }, [hourOffset])\n\n  return hours\n}\n\n// Render\nconst HoursList = ({ date, hourOffset, renderItem }) => {\n  const hours: any[] = useHours(date, hourOffset)\n\n  return (\n    <div>\n      {hours.map((date) => {\n        return renderItem(date)\n      })}\n    </div>\n  )\n}\n\nHoursList.propTypes = {\n  date: PropTypes.any.isRequired,\n  hourOffset: PropTypes.number.isRequired,\n  renderItem: PropTypes.func.isRequired\n}\n\nexport default withCalendar(HoursList)","///////////////////\n// CONFIG\n///////////////////\n\n// Number of hours shown per day\nexport const hoursToShow = 12\n\n// Number of days shown per calendar screen\nexport const daysToShow = 7\n\n// Height of calendar header\nexport const headerHeight = '40px'\n\n// Height of calendar slot\n// Fixed value due to not using table for calendar layout :(\nexport const slotHeight = '40px'","import React from 'react'\nimport styled from 'styled-components'\n\n// Config\nimport {slotHeight} from '../../config'\n\n// Styles\nconst Main = styled.div`\n  padding: 10px;\n  text-align: center;\n  border-bottom: 1px solid #ddd;\n  height: ${slotHeight}\n`\n\n// Render\nexport default ({ children }) => (\n  <Main>\n    {children}\n  </Main>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\n\n// Atoms\nimport AddButton from '../AddButton'\nimport Typpography from '../Typography'\nimport HoursList from '../HoursList'\nimport Slot from '../Slot'\n\n// Config\nimport {headerHeight} from '../../config'\n\n// Styles\nconst Main = styled.div`\n  flex: 1;\n  border-bottom: ${headerHeight} solid #000;\n`\n\nconst Header = styled.div`\n  height: ${headerHeight};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000;\n  color: #fff;\n  padding: 0 5px;\n`\n\n// Render\nconst Day = ({ date, addBooking }) => (\n  <Main>\n    <Header>\n      <Typpography fontSize=\"14px\">{date.format('DD/MM/YYYY')}</Typpography>\n    </Header>\n\n    <HoursList \n      date={date}\n      renderItem={(slotDate) => (\n        <Slot key={slotDate.format('HH:mm')}>\n          <AddButton onClick={() => {\n            addBooking(slotDate)\n          }} />\n        </Slot>\n      )} />\n  </Main>\n)\n\nDay.propTypes = {\n  date: PropTypes.any,\n  addBooking: PropTypes.func.isRequired\n}\n\nexport default Day","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n// Styles\nconst Main = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 5;\n`\n\nconst Content = styled.div`\n  width: 500px;\n  max-width: 100%;\n  margin: 50px auto;\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 3px;\n`\n\n// Render\nconst modalRoot = document.getElementById('modal-root')\n\nconst Modal = ({children}) => {\n  if(!modalRoot){\n    return null\n  }\n\n  const Component = () => (\n    <Main>\n      <Content>\n        {children}\n      </Content>\n    </Main>\n  )\n\n  return ReactDOM.createPortal(<Component />, modalRoot)\n}\n\nModal.propTypes = {\n  children: PropTypes.any\n}\n\nexport default Modal","import React, { useState, useEffect } from 'react'\nimport dayjs from 'dayjs'\nimport PropTypes from 'prop-types'\n\n// Atoms\nimport Day from '../../atoms/Day'\nimport Modal from '../../atoms/Modal'\nimport Button from '../../atoms/Button'\nimport Typpography from '../../atoms/Typography'\n\n// Config\nimport {daysToShow} from '../../config'\n\n// Context\nimport {withCalendar} from '../../context/calendar'\n\n// Hooks\nconst today = dayjs().startOf('day')\n\nconst useDays = (dayOffset: number) => {\n  \n  const getDays = () => {\n    return [...Array(daysToShow)].map((_, index) => {\n      return today.add(index + dayOffset, 'day')\n    })    \n  }\n\n  const [days, setDays] = useState(getDays)\n\n  useEffect(() => {\n    setDays(getDays)\n  }, [dayOffset])\n\n  return days\n}\n\n// Render\nconst CalendarDays = ({ dayOffset }) => {\n  const days: any[] = useDays(dayOffset)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [selectedDate, setSelectedDate] = useState(today)\n\n  return (\n    <React.Fragment>\n      {days.map(date => (\n        <Day \n          key={date.format('DD/MM/YYYY')} \n          date={date}\n          addBooking={(date) => {\n            setSelectedDate(date)\n            setModalOpen(true)\n          }} />\n      ))}\n\n      {modalOpen &&\n        <Modal>\n          <Typpography margin=\"0 0 10px\">{selectedDate.format('MMMM D : HH:mm')}</Typpography>\n          <Button title=\"Close\" onClick={() => setModalOpen(false)} />\n        </Modal>\n      }\n    </React.Fragment>\n  )\n}\n\nCalendarDays.propTypes = {\n  dayOffset: PropTypes.number.isRequired\n}\n\nexport default withCalendar(CalendarDays)","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport MaterialIcon from 'material-icons-react'\nimport dayjs from 'dayjs'\n\n// Context\nimport {withCalendar} from '../../context/calendar'\n\n// Atoms\nimport Typpography from '../../atoms/Typography'\nimport HoursList from '../../atoms/HoursList'\nimport Slot from '../../atoms/Slot'\nimport IconButton from '../../atoms/IconButton'\n\n// Config\nimport {headerHeight} from '../../config'\n\n// Styles\nconst Button = styled(IconButton)`\n  height: ${headerHeight};\n`\n\n// Render\nconst today = dayjs()\n\nconst CalendarHours = ({ hourOffset, incrementHourOffset, decrementHourOffset }) => (\n  <div>\n    <Button \n      onClick={decrementHourOffset} \n      icon=\"keyboard_arrow_up\" \n      size={20} />\n\n    <HoursList \n      date={today}\n      renderItem={(date) => (\n        <Slot key={date.format('HH:mm')}>\n          <Typpography>{date.format('HH:mm')}</Typpography>\n        </Slot>\n      )} />\n\n    <Button \n      onClick={incrementHourOffset} \n      icon=\"keyboard_arrow_down\" \n      size={20} />\n  </div>\n)\n\nCalendarHours.propTypes = {\n  hourOffset: PropTypes.number.isRequired,\n  incrementHourOffset: PropTypes.func.isRequired,\n  decrementHourOffset: PropTypes.func.isRequired\n}\n\nexport default withCalendar(CalendarHours)","import React from 'react'\nimport styled from 'styled-components'\n\n// Context\nimport {CalendarProvider} from '../../context/calendar'\n\n// Molecules\nimport Header from '../../molecules/Header'\nimport CalendarDays from '../../molecules/CalendarDays'\nimport CalendarHours from '../../molecules/CalendarHours'\n\n// Styles\nconst Main = styled.div`\n  display: flex;\n`\n\n// Render\nexport default () => (\n  <CalendarProvider>\n    <Header />\n    <Main>\n      <CalendarHours />\n      <CalendarDays />\n    </Main>\n  </CalendarProvider>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport {Provider} from 'react-redux'\n\n// Store\nimport store from './store'\n\n// Atoms\nimport Container from './atoms/Container'\n\n// Organisms\nimport Calendar from './organisms/Calendar'\n\n// Render\nexport default () => (\n  <Provider store={store}>\n    <Container>\n      <Calendar />\n    </Container>\n  </Provider>\n)"],"sourceRoot":""}